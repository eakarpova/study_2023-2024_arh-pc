%include	 'in_out.asm'
section		.data
msg1 db 'Введите B: ',0h
msg2 db "Наибольшее число: ",0h
A dd '20'
C dd '50'
section .bss
max resb 10
B resb 10
section		.text
global _start
_start:
mov eax,msg1
call sprint

mov ecx,B
mov edx,10
call sread
mov eax,B
call atoi
mov [B],eax

movecx,[A]
mov[max],ecx ; 'max = A'
; ----------
; 'ecx = A'
Сравниваем 'A' и 'С' (как символы)
cmpecx,[C]; Сравниваем 'A' и 'С'
jgcheck_B; если 'A>C', то переход на метку 'check_B',
movecx,[C]; иначе 'ecx = C'
mov[max],ecx ; 'max = C'
; ----------
Преобразование 'max(A,C)' из символа в число
check_B:
mov
eax,max
call atoi
mov
; Вызов подпрограммы перевода символа в число
[max],eax ; запись преобразованного числа в `max`
; ----------
Сравниваем 'max(A,C)' и 'B' (как числа)
movecx,[max]cmpecx,[B]; Сравниваем 'max(A,C)' и 'B'
jgfin; если 'max(A,C)>B', то переход на 'fin',
movecx,[B]; иначе 'ecx = B'
mov[max],ecx
; ----------
Вывод результата
fin:
mov
eax, msg2
call sprint
mov
; Вывод сообщения 'Наибольшее число: '
eax,[max]
call iprintLF; Вывод 'max(A,B,C)'
call quit; Выход
